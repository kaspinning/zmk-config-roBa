#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        paste {
            bindings = <&kp LS(LC(V))>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        bt_sel0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <6 7>;
        };

        bt_sel1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <7 8>;
        };

        combo_MB3 {
            bindings = <&mkp MB3>;
            key-positions = <13 2>;
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "NEW_BEHAVIOR";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    macros {
        to_layer_0: new_macro {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "NEW_MACRO";
        };

        MailAdress: MailAdress {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp K &kp A &kp S &kp P &kp I &kp N &kp I &kp N &kp G &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "MAILADRESS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB        &kp W         &kp E  &kp R      &kp T                                     &kp Y      &kp U    &kp I      &kp O    &kp SEMICOLON
&kp A          &kp S         &kp D  &kp F      &kp G  &mo 6               &kp GRAVE      &kp H      &lt 5 J  &lt 1 K    &kp L    &kp P
&kp Z          &kp X         &kp C  &kp V      &kp B  &kp LEFT_SHIFT      &kp RSHIFT     &kp N      &kp M    &kp COMMA  &kp DOT  &kp SLASH
&lt 7 LG(TAB)  &kp LEFT_ALT  &mo 2  &kp SPACE  &mo 1  &mo 5               &kp BACKSPACE  &kp ENTER                               &kp LG(TAB)
            >;

            sensor-bindings = <&new_behavior SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&kp LG(LS(S))   &kp F2             &kp LC(X)      &kp LC(A)      &kp LC(Z)                                       &kp Q          &kp F7          &mkp MB4        &mkp MB5         &kp SQT
&kp LCTRL       &kp LC(S)          &kp LC(V)      &mkp MB1       &kp F5     &none                  &kp LS(F10)   &kp HOME       &mkp MB1        &kp UP_ARROW    &mkp MB2         &kp MINUS
&kp LS(DELETE)  &kp LA(BACKSPACE)  &kp ESCAPE     &kp LC(C)      &kp LG(V)  &kp LC(BACKSPACE)      &kp LC(DEL)   &kp END        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LS(LC(T))
&kp ENTER       &none              &kp BACKSPACE  &kp BACKSPACE  &none      &none                  &kp LEFT_ALT  &kp RIGHT_ALT                                                   &kp CAPSLOCK
            >;
        };

        NUM {
            bindings = <
&kp DELETE        &kp LS(RCTRL)           &kp LS(NUMBER_1)  &kp LG(R)                &none                        &kp KP_NUMLOCK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&kp LEFT_BRACKET  &mkp MB3                &kp LEFT_SHIFT    &kp RIGHT_BRACKET        &none  &none      &none      &kp COMMA       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS
&kp BACKSPACE     &kp LC(LG(LEFT_ARROW))  &none             &kp LC(LG(RIGHT_ARROW))  &none  &none      &none      &kp PERIOD      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH
&kp LG(D)         &none                   &none             &none                    &none  &none      &kp EQUAL  &kp NUMBER_0                                              &none
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans    &trans                      &trans  &trans    &mkp MB4  &mkp MB5  &trans
&trans  &trans  &trans  &mkp MB1  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans    &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans    &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&none      &none  &none  &none  &studio_unlock                    &none  &none  &none  &none  &none
&none      &none  &none  &none  &MailAdress     &none      &none  &none  &none  &none  &none  &none
&kp LC(W)  &none  &kp S  &kp U  &kp LG(X)       &none      &none  &none  &none  &none  &none  &none
&none      &none  &none  &none  &none           &none      &none  &none                       &none
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&none  &none  &mkp MB3  &none           &none                    &none  &none  &none  &none  &none
&none  &none  &none     &kp LEFT_SHIFT  &none  &none      &none  &none  &none  &none  &none  &none
&none  &none  &none     &none           &none  &none      &none  &none  &none  &none  &none  &none
&none  &none  &none     &none           &none  &none      &none  &none                       &none
            >;
        };
    };
};
